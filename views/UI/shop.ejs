<%- include('../layout/header.ejs') %>

<!-- Start Hero Section -->
<div class="hero">
  <div class="container">
    <div class="row justify-content-between">
      <div class="col-lg-5">
        <div class="intro-excerpt">
          <h1>Shop</h1>
        </div>
      </div>
      <div class="input-group">
        <input
          id="search-input"
          type="search"
          class="form-control"
          placeholder="Search anything..."
        />
        <button id="search-button" type="button" class="btn btn-primary">
          <i class="fa fa-search"></i>
        </button>
      </div>
      <div class="col-lg-7"></div>
    </div>
  </div>
</div>
<!-- End Hero Section -->

<div class="untree_co-section product-section before-footer-section">
  <div class="container">
    <div class="row">
      <% if(getallProduct.length > 0) { for(let i = 0; i < getallProduct.length;
      i++) { %>

      <div class="col-12 col-md-4 col-lg-3 mb-5">
        <a class="product-item" href="/product/<%= getallProduct[i]._id %>">
          <img
            src="/productImage/<%= getallProduct[i].images[1] %>"
            class="img-fluid product-thumbnail"
          />
          <h3 class="product-title"><%= getallProduct[i].title %></h3>
          <strong class="product-price">â‚¹<%= getallProduct[i].price %></strong>

          <span class="icon-cross">
            <img src="/images/cross.svg" class="img-fluid" />
          </span>
        </a>
      </div>

      <% } } else { %>
      <td colspan="5">Products Not Found</td>
      <% } %>
    </div>
  </div>
</div>

<%- include('../layout/footer.ejs') %>

<script>
  document.getElementById("search-button").addEventListener("click", () => {
    const searchInput = document.getElementById("search-input").value;
    filterProducts(searchInput);
  });

  async function filterProducts(searchInput) {
    try {
      const response = await fetch(`/shop-filter?search=${searchInput}`);
      
      if (!response.ok) {
        throw new Error(`Error: ${response.status} - ${response.statusText}`);
      }

      const contentType = response.headers.get("content-type");
      if (contentType && contentType.includes("application/json")) {
        const data = await response.json();
        console.log(data);
        // Process the JSON data and update the UI as needed
      } else {
        console.error("Error: Unexpected response format");
        // Display an error message in the UI when the response is not in JSON format
      }
    } catch (error) {
      console.error("Error filtering products:", error);
      // Display an error message in the UI
    }
  }
</script>
