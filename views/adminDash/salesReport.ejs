<%- include('header.ejs') %>
<script src="https://printjs-4de6.kxcdn.com/print.min.js"></script>


<body>
<a href="/admin/dash"> <button type="button" class="btn btn-primary" >
      GO BACK 
    </button></a>
  <div class="screen-overlay"></div>
  
 
    <section class="content-main">
      <div class="content-header">
        <div>
          <h2 class="content-title card-title">Sales Report</h2>
          <p>Here you can see the sales report of your business</p>
        </div>
      
      </div>

      <div class="card mb-4">
        <div class="card-body">
          
       
        

          <article class="itemlist">
            <div class="row align-items-center">
              <div class="row mb-3">
                <div class="col-md-6">
                    <label for="startDate" class="form-label">Start Date:</label>
                    <input type="date" id="startDate" class="form-control" autocomplete="off">
                </div>
                <div class="col-md-6">
                    <label for="endDate" class="form-label">End Date:</label>
                    <input type="date" id="endDate" class="form-control" autocomplete="off">
                </div>
            </div>
            <button onclick="filterOrders()">Filter Orders</button>

              
                <div class="card-body">
                    <div class="table-responsive">
                      <div class="table-responsive">
                        <table class="table align-middle table-nowrap mb-0">
                            <thead class="table-light">
                              <tr>
                                <th scope="col" class="text-center">
                                  <div class="form-check align-middle">
                                    <label class="form-check-label" for="transactionCheck01"></label>
                                  </div>
                                </th>
                                <th class="align-middle" scope="col">Order ID</th>
                                <th class="align-middle" scope="col">User Name</th>
                                <th class="align-middle" scope="col">Product Name</th>
                                <th class="align-middle" scope="col">Total</th>
                                <th class="align-middle" scope="col">Payment Status</th>
                                <th class="align-middle" scope="col">Payment Method</th>
                                <th class="align-middle" scope="col">Ordered Date & Time</th>
                              </tr>
                            </thead>
                            <tbody>
                              <% userorders.reverse().forEach(order => { %>
                                <% order.products.forEach((productItem, index, array) => { %>
                                  <tr>
                                    <td class="text-center"></td>
                                    <td>
                                      <p class="fw-bold"><%= order.orderId %></p>
                                    </td>
                                    <td>
                                      <% order.populatedOrderBy.forEach(user => { %>
                                        <%= user.name %>
                                      <% }); %>
                                    </td>
                                    <td>
                                      <% order.populatedProducts.forEach(product => { %>
                                        <%= product.title %>
                                      <% }); %>
                                    </td>
                                    <td><%= order.paymentIntent.amount %></td>
                                    <td><%= order.paymentIntent.status %></td>
                                    <td><%= order.paymentIntent.method %></td>
                                    <td>
                                      <% if (index === array.length - 1) { %>
                                        <strong>
                                          <p>
                                            <%= new Date(order.createdAt).toLocaleString("en-US", {
                                              year: 'numeric',
                                              month: '2-digit',
                                              day: '2-digit',
                                              hour: '2-digit',
                                              minute: '2-digit',
                                              second: '2-digit'
                                            }) %>
                                          </p>
                                        </strong>
                                      <% } %>
                                    </td>
                                  </tr>
                                <% }); %>
                              <% }); %>
                            </tbody>
                          </table>
                          <h4 class="fw-bold">Total Amount: <%= grandTotal.length > 0 ? grandTotal[0].totalAmount : 0 %></h4>


                          
                    </div>
                    </div>
            </div>
          </article>
         
          
        </div>
      </div>
     
      <div class="container text-center mt-4">
         <button type="button" class="btn btn-primary" onclick="download()" >
        Download Report
      </button>
       
      </div>
    </section>

    <!-- content-main end// -->
    <%- include('footer.ejs') %>
  </main>
  <!-- Include Axios library -->

</body>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


<script>
    async function download() {
      const startDate = document.getElementById("startDate").value;
      const endDate = document.getElementById("endDate").value;
      try {
          console.log('Start Date:', startDate);
          console.log('End Date:', endDate);
          const response = await axios.get('/admin/download-pdf', {
            params: {
              startDate: startDate,
              endDate: endDate
            },
            responseType: 'blob', // Set the responseType to 'blob'
          });

          // Create a blob URL and trigger the download
          const blob = new Blob([response.data], { type: 'application/pdf' });
          const url = window.URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.href = url;
          a.download = 'invoice.pdf';
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
          window.URL.revokeObjectURL(url);
      } catch (error) {
          console.error('Error:', error.message);
      }
  }
  
  </script>
<script>
  async function filterOrders() {
      const startDate = document.getElementById("startDate").value;
      const endDate = document.getElementById("endDate").value;
      try {
          console.log('Start Date:', startDate);
          console.log('End Date:', endDate);
          const response = await axios.get('/admin/sales-report', {
            params: {
    startDate: startDate,
    endDate: endDate
  }
          });
    
      } catch (error) {
          console.error('Error:', error.message);
      }
  }
  </script>
