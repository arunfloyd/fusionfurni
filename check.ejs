<%- include('header.ejs') %>

<body>
    <div class="screen-overlay"></div>
    <%- include('navbar-aside') %>
    <main class="main-wrap">
        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header">
                        <h2 class="content-title">Update the Product</h2>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Basic</h4>
                        </div>
                        <div class="card-body">
                            <form id="productForm" onsubmit="return validateForm()">
                                
                              
                                <div class="mb-4">
                                    <label for="product_title" class="form-label">Product title</label>
                                    <input type="text" placeholder="Type here" name="title" class="form-control" id="product_title" value="<%= updateProduct.title %>" />
                                    <span id="nameError" class="text-danger"></span>
                                </div>
                                <div class="mb-4">
            
                                    <label class="form-label">Description</label>
                                    <textarea placeholder="Type here" name="description" id="product_description" class="form-control" rows="4"><%= updateProduct.description %></textarea>
                                    <span id="descriptionError" class="text-danger"></span>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity </label>
                                        <div class="row gx-2">
                                            <input type="text" placeholder="Type here" name="quantity" id="quantity" class="form-control" />
                                <span id="quantityError" class="text-danger"></span>
                            </div>
                                    </div>
                                </div>
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <% if (category.length > 0) { %>
                                            <select class="form-select" name="category">
                                                <% for (let i = 0; i < category.length; i++) { %>
                                                    <option value="<%= category[i].title %>" <%= category[i].title === updateProduct.category ? 'selected' : '' %>>
                                                        <%= category[i].title %>
                                                    </option>
                                                <% } %>
                                            </select>
                                        <% } else { %>
                                            <p>Category Not Found</p>
                                        <% } %>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Price</label>
                                            <input type="text" placeholder="Type here" name="price" id="price" class="form-control" />
                                            <span id="priceError" class="text-danger"></span>
                                        </div>
                                        </div>
                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label">Product Details</label>
                                        <textarea placeholder="Type here" name="productDetails" id="product_details" class="form-control" rows="4"><%= updateProduct.productDetails %></textarea>
                                        <span id="productDetailsError" class="text-danger"></span>
                                       
                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label">Specification</label>
                                    <textarea placeholder="Type here" name="specification" id="specification" class="form-control" rows="4"><%= updateProduct.specification %></textarea>
                                    <span id="specificationError" class="text-danger"></span>
                                </div>
                                    <div class="mb-4">
                                        <label class="form-label">Warranty</label>
                                    <textarea placeholder="Type here" name="warranty" id="warranty" class="form-control" rows="4"><%= updateProduct.warranty %></textarea>
                                    <span id="warrantyError" class="text-danger"></span>
                                </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="card mb-4">
                                        <div class="card-header">
                                            <h4>Images</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="input-upload">
                                                <% if (updateProduct.images && updateProduct.images.length > 0) { %>
                                                    <% for (let i = 0; i < updateProduct.images.length; i++) { %>
                                                        <div class="image-container">
                                                            <img src="/productImage/<%= updateProduct.images[i] %>" alt="Image" />
                                                            <input type="checkbox" name="selectedImages" value="<%= updateProduct.images[i] %>">
                                                        </div>
                                                    <% } %>
                                                <% } %>
                                                <input class="form-control" type="file" name="images" multiple />
                                                <br>
                                                <button type="button" class="btn btn-info" onclick="deleteSelectedImages()">Delete Selected Images</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <h4>Make the Product List or Unlist</h4>
                                <br>
                                <div class="radio-group">
                                    <label>
                                        <input type="radio" name="list" value="true" <%= updateProduct.list ? 'checked' : '' %> />
                                        List
                                    </label>
                                    <label>
                                        <input type="radio" name="list" value="false" <%= !updateProduct.list ? 'checked' : '' %> />
                                        Unlist
                                    </label>
                                </div>
                                <thead>
                                    <br>
                                    <tr>
                                        <th>
                                            <button type="button" class="btn btn-danger" onclick="confirmDelete('<%= updateProduct._id %>')">
                                                Delete
                                            </button>
                                        </th>
                                    </tr>
                                </thead>
                                <button type="submit" class="btn btn-success">Submit</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- ... (remaining code) ... -->
    </main>
    <%- include('footer.ejs') %>

    <script src="/javascripts/vendors/jquery-3.6.0.min.js"></script>
    <script src="/javascripts/vendors/bootstrap.bundle.min.js"></script>
    <script src="/javascripts/vendors/select2.min.js"></script>
    <script src="/javascripts/vendors/perfect-scrollbar.js"></script>
    <script src="/javascripts/vendors/jquery.fullscreen.min.js"></script>
    <script src="/javascripts/vendors/chart.js"></script>
    <script src="/javascripts/custom-chart.js" type="text/javascript"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js" integrity="sha512-9KkIqdfN7ipEW6B6k+Aq20PV31bjODg4AA52W+tYtAE0jE0kMx49bjJ3FgvS56wzmyfMUHbQ4Km2b7l9+Y/+Eg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            let addProducts = document.getElementById('addProductsPage');

            console.log('hello');
            console.log(addProducts);

            if (addProducts) {
                let submitFormButton = document.getElementById("submitForm");

                //product details
                let productName = document.getElementById("product_title");
                let productDesc = document.getElementById("product_description");
                let productPrice = document.getElementById("price");
                let productQty = document.getElementById("quantity");
                let productCategory = document.getElementById('category');

                croppedImagesContainer.innerHTML = '';

                submitFormButton.addEventListener("click", async (event) => {
                    console.log('button clicked');
                    event.preventDefault();

                    let productName = document.getElementById('product_title').value;
                    let productDescription = document.getElementById('product_description').value.trim();
                    let price = document.getElementById('price').value;
                    let quantity = document.getElementById('quantity').value;

                    const nameRegex = /^[a-zA-Z\s]+$/;
                    const descriptionRegex = /^[a-zA-Z0-9\s.,;:'"()?!-]+$/m;
                    const woodRegex = /^[a-zA-Z\s]+$/;
                    const numericRegex = /^[0-9]+$/;

                    if (!nameRegex.test(productName)) {
                        document.getElementById('nameError').innerHTML = 'Name should only contain alphabets';
                        return false;
                    } else {
                        document.getElementById('nameError').innerHTML = '';
                    }

                    if (!numericRegex.test(price) || parseFloat(price) <= 0) {
                        document.getElementById('priceError').innerHTML = 'Price should be a positive numeric value';
                        return false;
                    } else {
                        document.getElementById('priceError').innerHTML = '';
                    }

                    if (!numericRegex.test(quantity) || parseInt(quantity) < 0) {
                        document.getElementById('quantityError').innerHTML = 'Stock Quantity should be a non-negative integer';
                        return false;
                    } else {
                        document.getElementById('quantityError').innerHTML = '';
                    }

                    // Create FormData
                    let form = document.getElementById("productForm");
                    let formData = new FormData(form);
                });

                productPrice.addEventListener('input', () => {
                    console.log('enter num');
                    let value = productPrice.value;
                    value = value.replace(/^0+/, '');

                    if (value.includes("-")) {
                        value = value.replace('-', '');
                    }
                    productPrice.value = value;
                });

                productQty.addEventListener('input', () => {
                    console.log('enter num');
                    let value = productQty.value;
                    value = value.replace(/^0+/, '');

                    if (value.includes("-")) {
                        value = value.replace('-', '');
                    }
                    productQty.value = value;
                });

                function validateField(fieldName, errorId, regex) {
                    var fieldValue = $('#' + fieldName).val();
                    var errorSpan = $('#' + errorId);

                    if (fieldValue && fieldValue.startsWith(' ')) {
                        errorSpan.text('Title should not start with a space.');
                        return;
                    }

                    if (!regex.test(fieldValue)) {
                        errorSpan.text('Title must be between 10 and 70 characters and should not start.');
                    } else {
                        errorSpan.text('');
                    }
                }

                $('#product_title').on('input', function () {
                    validateField('product_title', 'nameError', /^[a-zA-Z][a-zA-Z\s]{8,68}[a-zA-Z]$/);
                });

                function validateDescription(fieldName, errorId) {
                    var fieldValue = $('#' + fieldName).val();
                    var errorSpan = $('#' + errorId);

                    if (fieldValue && fieldValue.startsWith(' ')) {
                        errorSpan.text(fieldName + ' should not start with a space.');
                        return;
                    }

                    var wordCount = fieldValue.trim().split(/\s+/).filter(function (word) {
                        return word.length > 0;
                    }).length;

                    if (wordCount >= 5) {
                        errorSpan.text('');
                    } else {
                        errorSpan.text(fieldName + ' should have more than 5 words.');
                    }
                }

                $('#product_description').on('input', function () {
                    validateDescription('product_description', 'descriptionError');
                });

                $('#product_details').on('input', function () {
                    validateDescription('product_details', 'productDetailsError');
                });

                $('#specification').on('input', function () {
                    validateDescription('specification', 'specificationError');
                });

                $('#warranty').on('input', function () {
                    validateDescription('warranty', 'warrantyError');
                });
            } else {
                console.log("Not in add products");
            }
        });
    </script>

    <script>
        function confirmDelete(productId) {
            var confirmation = confirm("Are you sure you want to delete?");
            if (confirmation) {
                // If the user confirms, redirect to the delete URL
                window.location.href = "/admin/product/delete/" + productId;
            }
            // If the user cancels, do nothing
        }

        function deleteSelectedImages() {
            const selectedCheckboxes = document.querySelectorAll('input[name="selectedImages"]:checked');
            const selectedImageValues = Array.from(selectedCheckboxes).map(checkbox => checkbox.value);
          
            if (selectedImageValues.length > 0) {
                if (confirm('Are you sure you want to delete the selected images?')) {
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', '/admin/product/delete/images', true);
                    xhr.setRequestHeader('Content-Type', 'application/json');
                    xhr.onload = function () {
                        if (xhr.status === 200) {
                            // Refresh the page or update UI with a success message
                            location.reload();
                        } else {
                            // Display an informative error message to the user
                            alert('Failed to delete images. Please try again.');
                        }
                    };
                    xhr.onerror = function () {
                        // Handle network errors
                        console.error('Network error during image deletion');
                    };
                    xhr.send(JSON.stringify({ selectedImages: selectedImageValues }));
                }
            } else {
                alert('Please select images to delete.');
            }
        }

        function checkTextArea(textarea, minWords, validationMessageId) {
            const text = textarea.value.trim();
            const words = text.split(/\s+/).filter(word => word !== '').length;

            if (text.startsWith(' ')) {
                document.getElementById(validationMessageId).textContent = 'Text should not start with a space.';
            } else if (words < minWords) {
                document.getElementById(validationMessageId).textContent = `Minimum ${minWords} words required.`;
            } else {
                document.getElementById(validationMessageId).textContent = '';
            }
        }

        function checkWordCount(textarea, minWords, validationMessageId) {
            const text = textarea.value.trim();
            const words = text.split(/\s+/).filter(word => word !== '').length;

            if (words < minWords) {
                document.getElementById(validationMessageId).textContent = `Minimum ${minWords} words required.`;
            } else {
                document.getElementById(validationMessageId).textContent = '';
            }
        }

        function validateForm() {
            // Validation logic for title
            const title = document.getElementById('product_name').value;
            const titleValidation = document.getElementById('titleValidation');

            // Check if the title has leading spaces
            if (title.trim() === '' || title.length < 10 || title.length > 100) {
                titleValidation.textContent = 'Please enter a valid product title between 10 and 100 characters without leading spaces.';
                return false;
            } else {
                titleValidation.textContent = '';
            }

            // Validation logic for quantity
            const quantity = document.getElementsByName('quantity')[0].value;
            const quantityValidation = document.getElementById('quantityValidation');
            if (isNaN(quantity) || quantity < 0) {
                quantityValidation.textContent = 'Please enter a valid quantity.';
                return false;
            } else {
                quantityValidation.textContent = '';
            }

            // Validation logic for price
            const price = document.getElementsByName('price')[0].value;
            const priceValidation = document.getElementById('priceValidation');
            if (isNaN(price) || price <= 1000) {
                priceValidation.textContent = 'Please enter a valid price.';
                return false;
            } else {
                priceValidation.textContent = '';
            }

            // Validation logic for images
            const images = document.getElementsByName('images')[0].value;
            const imagesValidation = document.getElementById('imagesValidation');
            if (images === '') {
                imagesValidation.textContent = 'Please select at least one image.';
                return false;
            } else {
                imagesValidation.textContent = '';
            }

            // Validation logic for other fields if needed

            // Validation logic for product details
            const productDetailsTextArea = document.getElementsByName('productDetails')[0];
            const productDetailsValidation = document.getElementById('productDetailsValidation');
            checkTextArea(productDetailsTextArea, 50, 'productDetailsValidation');

            // Validation logic for specification
            const specificationTextArea = document.getElementsByName('specification')[0];
            const specificationValidation = document.getElementById('specificationValidation');
            checkTextArea(specificationTextArea, 50, 'specificationValidation');

            // Validation logic for warranty
            const warrantyTextArea = document.getElementsByName('warranty')[0];
            const warrantyValidation = document.getElementById('warrantyValidation');
            checkTextArea(warrantyTextArea, 50, 'warrantyValidation');

            return true; // Return false if form is not valid
        }
    </script>
</body>